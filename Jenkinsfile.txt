pipeline {
    agent any
    stages {
		
		
		// ******ALL CODE TO BE ADDED BELOW THIS COMMENT******
		
	 stage('Clean') {
            steps {
                sh 'mvn clean'
            }
        }
		//Code ends for stage Clean
		
		
		//Code starts for stage PMD
		stage('PMD') {
            steps {
                sh 'mvn site'
            }
        }
	
		// ******ALL CODE TO BE ADDED ABOVE THIS COMMENT******
		stage('Compile') {
            steps {
                sh 'mvn compile'
            }
        }
		//Code ends for stage Compile

	//
		stage('Unit Test') {
            steps {
                sh 'mvn test'
            }
		post {
			always {
				junit 'target/surefire-reports/*.xml'
			}
		}
        }
	//
		stage('Code Analysis') {
            steps {
                script {
			scannerHome=tool 'sonar-scanner'
			}
			withSonarQubeEnv( 'My SonarQube Server')
			{
			sh "${scannerHome}/bin/sonar-scanner"
			}
			
		}
        }
	//
		stage('Code Coverage')
		{
	   steps {
			sh 'mvn jacoco:report'
		}	
	}
	//
		stage('Install')
		{
	   steps {
			sh 'mvn install -DskipTests'
		}	
	}
	//
		stage('Launch Tomcat Server')
		{
	   steps {
			sh '/tmp/apache-tomcat-9.0.20/bin/startup.sh'
		}	
	}
	//
		stage('Deploy War on Tomcat Server')
		{
	   steps {
			sh 'cp /var/jenkins_home/workspace/verity-devops-ex/target/ExpenseApp-1.war /tmp/apache-tomcat-9.0.20/webapps'
		}	
	}
	//
		stage('API Test')
		{
	   steps {
			git url: 'https://github.com/rosanabermeo/EMAPITests-ex.git'
			sh 'mvn -Dtest=ExpenseManagerAPITest test'
		}	
	}
	//
		stage('System Test')
		{
	   steps {
			git url: 'https://github.com/rosanabermeo/EMSystemTests-ex.git'
			sh 'mvn -Dtest=ExpenseManagerSystemTest test'
		}	
	}
	//
		stage('BDD Test')
		{
	   steps {
			git url: 'https://github.com/rosanabermeo/EMSystemTests_BDD.git'
			sh 'mvn -Dtest=TestRunner test'
		}	
	}
	//
    }
}